@using Kviz.Services
@using Kviz.Migrations.Tables
@layout Shared.CreatorMenuLayout
@page "/creator"
@inject NavigationManager Navigation
@inject IDataService dataService
@inject QuizService quizService
@if(@quizes == null)
{
    <h3>Loading...</h3>
}
else
{
    <div id="buttons-div">
        <RadzenButton Variant="Variant.Outlined" Text="Create new Quiz" ButtonStyle="ButtonStyle.Secondary" class="rz-ripple" Style="margin: 10px;" Click="(() => NavigateToEditor())" />
        <RadzenButton Variant="Variant.Outlined" ButtonStyle="ButtonStyle.Secondary" Text="Create new account" class="rz-ripple rz-color-secondary" Style="margin: 10px" Click="(() => NavigateToEditor())" />
    </div>
    <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start">
        <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Start">
            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Your Quizes:</RadzenText>
            @foreach (QuizTable quiz in quizes)
            {
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start">
                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" Text="@quiz.Name"></RadzenText>
                    <RadzenButton class="rz-ripple" Click=@(() => OnCreateSession(quiz.Id)) ButtonStyle="ButtonStyle.Secondary" Variant="Variant.Outlined" Text="Create Session"/>
                    <RadzenButton class="rz-ripple" Click=@(() => OnEditQuiz(quiz)) Icon="edit" ButtonStyle="ButtonStyle.Secondary" Variant="Variant.Text" />
                    <RadzenButton class="rz-ripple" Click=@(() => OnDeleteQuiz(quiz)) Icon="delete" ButtonStyle="ButtonStyle.Danger" Variant="Variant.Text" />
                </RadzenStack>
            }
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Vertical" AlignItems="AlignItems.Start">
            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Your Quizes:</RadzenText>
            @foreach (SessionTable session in sessions)
            {
                <RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Start">
                    <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3" Text="@session.Id.ToString()"></RadzenText>
                    <RadzenButton class="rz-ripple" Click=@(() => OnStartSession(session)) ButtonStyle="ButtonStyle.Secondary" Variant="Variant.Outlined" Text="Start Session"/>
                </RadzenStack>
            }
        </RadzenStack>


    </RadzenStack>
}





@code {
    List<QuizTable> quizes;
    List<SessionTable> sessions;

    protected override async Task OnInitializedAsync()
    {

        sessions = await dataService.GetSessions();
        quizes = await dataService.GetQuizes();
        await base.OnInitializedAsync();
    }

    void NavigateToEditor()
    {
        Navigation.NavigateTo("/creator/editor");
    }

    async void OnCreateSession(int Id)
    {
        int id = dataService.CreateSession(Id).Result;
        sessions = await dataService.GetSessions();
        quizService.Sessions.Add(id, new GameService());
        //TODO make it so that the session is registered in the quizservice after creation.

    }
    void OnEditQuiz(QuizTable quiz)
    {
        Navigation.NavigateTo($"/creator/editor/{quiz.Id}");
    }
    void OnDeleteQuiz(QuizTable quiz)
    {

    }
    void OnStartSession(SessionTable session)
    {
        Navigation.NavigateTo($"/creator/game/{session.Id}");
    }

   

}
