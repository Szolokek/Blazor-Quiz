@using System.Diagnostics;
@using Kviz.Authentication;
@using Microsoft.AspNetCore.Components.Authorization;
@inject NavigationManager UriHelper
@inject AuthenticationStateProvider authStateProvider

<div style="width:100%;" class="rz-color-primary-light rz-background-color-black">
    <RadzenMenu Click="OnParentClicked" class="rz-color-primary-light rz-background-color-black" id="menu-bar">
        <div class="menu-point">
            <RadzenButton Variant="Variant.Text" class="nav-link" Click="@NavigateHome" ButtonStyle="ButtonStyle.Light" Text="Home" Icon="home" />
        </div>
        <div class="menu-point">
            <RadzenButton Variant="Variant.Text" class="nav-link" Click="(() => OnLogoutClickedAsync())" ButtonStyle="ButtonStyle.Light" Text="Logout" Icon="logout" />
        </div>





    </RadzenMenu>
</div>

<style>
    #menu-bar{
        height: 3rem;
    }
    .menu-point{
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
    }
    .menu-point:hover{
            background-color: #323232;
    }

    .nav-link{
        height: 100%;

    }

    .nav-link:hover {
            background-color: #323232;
    }

</style>

<style>
    nav{
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
    }
</style>

@code {
    string curr_search_string = "";
    void OnParentClicked(MenuItemEventArgs args)
    {

    }

    void OnChange(string value, string name)
    {
        curr_search_string = value;
    }

    private async Task OnLogoutClickedAsync()
    {
        await UseAuthyenticationService(null!);
        UriHelper.NavigateTo("/");
    }

    private async Task UseAuthyenticationService(string token)
    {
        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(token);
    }


    void NavigateHome()
    {
        UriHelper.NavigateTo("/");
    }
}
